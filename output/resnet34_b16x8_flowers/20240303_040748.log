2024-03-03 04:07:48,271 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+f1f3901
------------------------------------------------------------

2024-03-03 04:07:48,272 - mmcls - INFO - Distributed training: False
2024-03-03 04:07:48,467 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=34,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=512,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet34_b16x8_flowers'
gpu_ids = range(0, 1)

2024-03-03 04:07:48,738 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-03-03 04:07:49,029 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([128, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([256, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-03-03 04:07:52,375 - mmcls - INFO - Start running, host: u3311680@gpu2-comp-112, work_dir: /userhome/cs2/u3311680/oxford-cnn/output/resnet34_b16x8_flowers
2024-03-03 04:07:52,375 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-03-03 04:07:52,375 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-03-03 04:07:52,375 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/u3311680/oxford-cnn/output/resnet34_b16x8_flowers by HardDiskBackend.
2024-03-03 04:08:15,085 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-03-03 04:08:18,104 - mmcls - INFO - Epoch(val) [1][11]	accuracy_top-1: 35.2941, accuracy_top-5: 81.1765
2024-03-03 04:08:29,515 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-03-03 04:08:32,006 - mmcls - INFO - Epoch(val) [2][11]	accuracy_top-1: 50.0000, accuracy_top-5: 91.7647
2024-03-03 04:08:43,295 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-03-03 04:08:46,430 - mmcls - INFO - Epoch(val) [3][11]	accuracy_top-1: 54.7059, accuracy_top-5: 93.5294
2024-03-03 04:08:57,170 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-03-03 04:08:59,669 - mmcls - INFO - Epoch(val) [4][11]	accuracy_top-1: 51.7647, accuracy_top-5: 90.5882
2024-03-03 04:09:11,183 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-03-03 04:09:13,919 - mmcls - INFO - Epoch(val) [5][11]	accuracy_top-1: 54.7059, accuracy_top-5: 93.5294
2024-03-03 04:09:24,666 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-03-03 04:09:28,397 - mmcls - INFO - Epoch(val) [6][11]	accuracy_top-1: 54.7059, accuracy_top-5: 95.8824
2024-03-03 04:09:39,119 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-03-03 04:09:41,713 - mmcls - INFO - Epoch(val) [7][11]	accuracy_top-1: 57.0588, accuracy_top-5: 95.8824
2024-03-03 04:09:52,793 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-03-03 04:09:55,351 - mmcls - INFO - Epoch(val) [8][11]	accuracy_top-1: 68.8235, accuracy_top-5: 97.0588
2024-03-03 04:10:06,384 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-03-03 04:10:09,003 - mmcls - INFO - Epoch(val) [9][11]	accuracy_top-1: 57.6471, accuracy_top-5: 94.1176
2024-03-03 04:10:20,076 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-03-03 04:10:22,481 - mmcls - INFO - Epoch(val) [10][11]	accuracy_top-1: 59.4118, accuracy_top-5: 97.6471
2024-03-03 04:10:33,779 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-03-03 04:10:36,137 - mmcls - INFO - Epoch(val) [11][11]	accuracy_top-1: 44.7059, accuracy_top-5: 87.0588
2024-03-03 04:10:47,050 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-03-03 04:10:49,401 - mmcls - INFO - Epoch(val) [12][11]	accuracy_top-1: 62.9412, accuracy_top-5: 94.7059
2024-03-03 04:11:00,237 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-03-03 04:11:02,717 - mmcls - INFO - Epoch(val) [13][11]	accuracy_top-1: 73.5294, accuracy_top-5: 97.0588
2024-03-03 04:11:14,001 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-03-03 04:11:16,439 - mmcls - INFO - Epoch(val) [14][11]	accuracy_top-1: 68.2353, accuracy_top-5: 98.2353
2024-03-03 04:11:27,606 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-03-03 04:11:29,938 - mmcls - INFO - Epoch(val) [15][11]	accuracy_top-1: 70.0000, accuracy_top-5: 97.6471
2024-03-03 04:11:40,949 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-03-03 04:11:43,582 - mmcls - INFO - Epoch(val) [16][11]	accuracy_top-1: 78.2353, accuracy_top-5: 98.8235
2024-03-03 04:11:54,595 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-03-03 04:11:57,083 - mmcls - INFO - Epoch(val) [17][11]	accuracy_top-1: 78.2353, accuracy_top-5: 99.4118
2024-03-03 04:12:08,240 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-03-03 04:12:10,640 - mmcls - INFO - Epoch(val) [18][11]	accuracy_top-1: 70.5882, accuracy_top-5: 100.0000
2024-03-03 04:12:21,950 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-03-03 04:12:24,420 - mmcls - INFO - Epoch(val) [19][11]	accuracy_top-1: 77.6471, accuracy_top-5: 99.4118
2024-03-03 04:12:35,440 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-03-03 04:12:38,032 - mmcls - INFO - Epoch(val) [20][11]	accuracy_top-1: 77.0588, accuracy_top-5: 98.2353
2024-03-03 04:12:49,123 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-03-03 04:12:52,744 - mmcls - INFO - Epoch(val) [21][11]	accuracy_top-1: 79.4118, accuracy_top-5: 98.8235
2024-03-03 04:13:04,000 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-03-03 04:13:07,145 - mmcls - INFO - Epoch(val) [22][11]	accuracy_top-1: 77.6471, accuracy_top-5: 99.4118
2024-03-03 04:13:17,990 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-03-03 04:13:20,440 - mmcls - INFO - Epoch(val) [23][11]	accuracy_top-1: 82.9412, accuracy_top-5: 100.0000
2024-03-03 04:13:31,749 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-03-03 04:13:34,393 - mmcls - INFO - Epoch(val) [24][11]	accuracy_top-1: 84.7059, accuracy_top-5: 98.8235
2024-03-03 04:13:45,492 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-03-03 04:13:48,071 - mmcls - INFO - Epoch(val) [25][11]	accuracy_top-1: 77.0588, accuracy_top-5: 100.0000
2024-03-03 04:13:59,023 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-03-03 04:14:01,769 - mmcls - INFO - Epoch(val) [26][11]	accuracy_top-1: 83.5294, accuracy_top-5: 98.8235
2024-03-03 04:14:13,064 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-03-03 04:14:15,649 - mmcls - INFO - Epoch(val) [27][11]	accuracy_top-1: 78.8235, accuracy_top-5: 98.8235
2024-03-03 04:14:26,842 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-03-03 04:14:29,268 - mmcls - INFO - Epoch(val) [28][11]	accuracy_top-1: 85.2941, accuracy_top-5: 98.8235
2024-03-03 04:14:40,411 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-03-03 04:14:43,165 - mmcls - INFO - Epoch(val) [29][11]	accuracy_top-1: 77.6471, accuracy_top-5: 98.8235
2024-03-03 04:14:54,544 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-03-03 04:14:56,948 - mmcls - INFO - Epoch(val) [30][11]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-03-03 04:15:07,934 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-03-03 04:15:10,716 - mmcls - INFO - Epoch(val) [31][11]	accuracy_top-1: 82.9412, accuracy_top-5: 99.4118
2024-03-03 04:15:21,753 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-03-03 04:15:24,410 - mmcls - INFO - Epoch(val) [32][11]	accuracy_top-1: 84.1176, accuracy_top-5: 98.8235
2024-03-03 04:15:35,384 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-03-03 04:15:38,358 - mmcls - INFO - Epoch(val) [33][11]	accuracy_top-1: 82.3529, accuracy_top-5: 99.4118
2024-03-03 04:15:49,786 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-03-03 04:15:52,314 - mmcls - INFO - Epoch(val) [34][11]	accuracy_top-1: 87.0588, accuracy_top-5: 99.4118
2024-03-03 04:16:03,457 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-03-03 04:16:06,009 - mmcls - INFO - Epoch(val) [35][11]	accuracy_top-1: 85.2941, accuracy_top-5: 99.4118
2024-03-03 04:16:17,352 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-03-03 04:16:19,941 - mmcls - INFO - Epoch(val) [36][11]	accuracy_top-1: 89.4118, accuracy_top-5: 100.0000
2024-03-03 04:16:31,541 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-03-03 04:16:33,956 - mmcls - INFO - Epoch(val) [37][11]	accuracy_top-1: 86.4706, accuracy_top-5: 99.4118
2024-03-03 04:16:44,963 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-03-03 04:16:48,473 - mmcls - INFO - Epoch(val) [38][11]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-03-03 04:16:59,385 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-03-03 04:17:02,157 - mmcls - INFO - Epoch(val) [39][11]	accuracy_top-1: 86.4706, accuracy_top-5: 100.0000
2024-03-03 04:17:13,697 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-03-03 04:17:16,363 - mmcls - INFO - Epoch(val) [40][11]	accuracy_top-1: 82.3529, accuracy_top-5: 98.2353
2024-03-03 04:17:27,171 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-03-03 04:17:29,588 - mmcls - INFO - Epoch(val) [41][11]	accuracy_top-1: 89.4118, accuracy_top-5: 98.8235
2024-03-03 04:17:40,508 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-03-03 04:17:43,313 - mmcls - INFO - Epoch(val) [42][11]	accuracy_top-1: 90.5882, accuracy_top-5: 99.4118
2024-03-03 04:17:54,349 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-03-03 04:17:56,779 - mmcls - INFO - Epoch(val) [43][11]	accuracy_top-1: 85.8824, accuracy_top-5: 99.4118
2024-03-03 04:18:08,650 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-03-03 04:18:11,481 - mmcls - INFO - Epoch(val) [44][11]	accuracy_top-1: 86.4706, accuracy_top-5: 99.4118
2024-03-03 04:18:22,523 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-03-03 04:18:25,170 - mmcls - INFO - Epoch(val) [45][11]	accuracy_top-1: 89.4118, accuracy_top-5: 99.4118
2024-03-03 04:18:36,226 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-03-03 04:18:38,911 - mmcls - INFO - Epoch(val) [46][11]	accuracy_top-1: 90.5882, accuracy_top-5: 100.0000
2024-03-03 04:18:50,151 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-03-03 04:18:52,782 - mmcls - INFO - Epoch(val) [47][11]	accuracy_top-1: 90.0000, accuracy_top-5: 100.0000
2024-03-03 04:19:04,109 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-03-03 04:19:06,486 - mmcls - INFO - Epoch(val) [48][11]	accuracy_top-1: 90.0000, accuracy_top-5: 100.0000
2024-03-03 04:19:17,680 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-03-03 04:19:20,112 - mmcls - INFO - Epoch(val) [49][11]	accuracy_top-1: 90.5882, accuracy_top-5: 100.0000
2024-03-03 04:19:31,292 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-03-03 04:19:33,991 - mmcls - INFO - Epoch(val) [50][11]	accuracy_top-1: 90.0000, accuracy_top-5: 99.4118
2024-03-03 04:19:45,405 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-03-03 04:19:47,923 - mmcls - INFO - Epoch(val) [51][11]	accuracy_top-1: 90.0000, accuracy_top-5: 100.0000
2024-03-03 04:19:58,889 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-03-03 04:20:02,147 - mmcls - INFO - Epoch(val) [52][11]	accuracy_top-1: 90.0000, accuracy_top-5: 99.4118
2024-03-03 04:20:13,104 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-03-03 04:20:15,662 - mmcls - INFO - Epoch(val) [53][11]	accuracy_top-1: 92.3529, accuracy_top-5: 100.0000
2024-03-03 04:20:26,588 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-03-03 04:20:29,428 - mmcls - INFO - Epoch(val) [54][11]	accuracy_top-1: 80.0000, accuracy_top-5: 100.0000
2024-03-03 04:20:40,521 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-03-03 04:20:43,009 - mmcls - INFO - Epoch(val) [55][11]	accuracy_top-1: 84.7059, accuracy_top-5: 98.8235
2024-03-03 04:20:54,178 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-03-03 04:20:56,766 - mmcls - INFO - Epoch(val) [56][11]	accuracy_top-1: 91.1765, accuracy_top-5: 99.4118
2024-03-03 04:21:07,684 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-03-03 04:21:10,094 - mmcls - INFO - Epoch(val) [57][11]	accuracy_top-1: 93.5294, accuracy_top-5: 99.4118
2024-03-03 04:21:21,209 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-03-03 04:21:23,721 - mmcls - INFO - Epoch(val) [58][11]	accuracy_top-1: 95.2941, accuracy_top-5: 99.4118
2024-03-03 04:21:35,001 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-03-03 04:21:37,467 - mmcls - INFO - Epoch(val) [59][11]	accuracy_top-1: 90.5882, accuracy_top-5: 100.0000
2024-03-03 04:21:48,709 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-03-03 04:21:51,536 - mmcls - INFO - Epoch(val) [60][11]	accuracy_top-1: 92.9412, accuracy_top-5: 99.4118
2024-03-03 04:22:02,784 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-03-03 04:22:05,742 - mmcls - INFO - Epoch(val) [61][11]	accuracy_top-1: 88.2353, accuracy_top-5: 99.4118
2024-03-03 04:22:16,851 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-03-03 04:22:20,146 - mmcls - INFO - Epoch(val) [62][11]	accuracy_top-1: 90.0000, accuracy_top-5: 99.4118
2024-03-03 04:22:31,443 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-03-03 04:22:34,137 - mmcls - INFO - Epoch(val) [63][11]	accuracy_top-1: 91.1765, accuracy_top-5: 100.0000
2024-03-03 04:22:44,882 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-03-03 04:22:48,417 - mmcls - INFO - Epoch(val) [64][11]	accuracy_top-1: 91.7647, accuracy_top-5: 100.0000
2024-03-03 04:22:59,600 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-03-03 04:23:02,223 - mmcls - INFO - Epoch(val) [65][11]	accuracy_top-1: 95.8824, accuracy_top-5: 100.0000
2024-03-03 04:23:13,074 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-03-03 04:23:15,696 - mmcls - INFO - Epoch(val) [66][11]	accuracy_top-1: 92.3529, accuracy_top-5: 99.4118
2024-03-03 04:23:26,615 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-03-03 04:23:28,857 - mmcls - INFO - Epoch(val) [67][11]	accuracy_top-1: 91.7647, accuracy_top-5: 100.0000
2024-03-03 04:23:40,603 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-03-03 04:23:43,082 - mmcls - INFO - Epoch(val) [68][11]	accuracy_top-1: 92.3529, accuracy_top-5: 100.0000
2024-03-03 04:23:54,161 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-03-03 04:23:56,661 - mmcls - INFO - Epoch(val) [69][11]	accuracy_top-1: 90.0000, accuracy_top-5: 100.0000
2024-03-03 04:24:07,984 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-03-03 04:24:10,413 - mmcls - INFO - Epoch(val) [70][11]	accuracy_top-1: 93.5294, accuracy_top-5: 100.0000
2024-03-03 04:24:21,867 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-03-03 04:24:24,465 - mmcls - INFO - Epoch(val) [71][11]	accuracy_top-1: 93.5294, accuracy_top-5: 100.0000
2024-03-03 04:24:35,706 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-03-03 04:24:38,378 - mmcls - INFO - Epoch(val) [72][11]	accuracy_top-1: 94.7059, accuracy_top-5: 99.4118
2024-03-03 04:24:49,622 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-03-03 04:24:52,334 - mmcls - INFO - Epoch(val) [73][11]	accuracy_top-1: 92.9412, accuracy_top-5: 99.4118
2024-03-03 04:25:03,452 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-03-03 04:25:05,841 - mmcls - INFO - Epoch(val) [74][11]	accuracy_top-1: 94.1176, accuracy_top-5: 99.4118
2024-03-03 04:25:17,204 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-03-03 04:25:19,698 - mmcls - INFO - Epoch(val) [75][11]	accuracy_top-1: 96.4706, accuracy_top-5: 99.4118
2024-03-03 04:25:31,047 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-03-03 04:25:33,582 - mmcls - INFO - Epoch(val) [76][11]	accuracy_top-1: 91.7647, accuracy_top-5: 100.0000
2024-03-03 04:25:44,409 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-03-03 04:25:46,871 - mmcls - INFO - Epoch(val) [77][11]	accuracy_top-1: 91.1765, accuracy_top-5: 100.0000
2024-03-03 04:25:57,803 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-03-03 04:26:01,299 - mmcls - INFO - Epoch(val) [78][11]	accuracy_top-1: 92.3529, accuracy_top-5: 100.0000
2024-03-03 04:26:12,319 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-03-03 04:26:15,277 - mmcls - INFO - Epoch(val) [79][11]	accuracy_top-1: 91.7647, accuracy_top-5: 99.4118
2024-03-03 04:26:26,424 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-03-03 04:26:29,216 - mmcls - INFO - Epoch(val) [80][11]	accuracy_top-1: 96.4706, accuracy_top-5: 100.0000
2024-03-03 04:26:40,088 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-03-03 04:26:42,581 - mmcls - INFO - Epoch(val) [81][11]	accuracy_top-1: 92.3529, accuracy_top-5: 100.0000
2024-03-03 04:26:53,464 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-03-03 04:26:56,290 - mmcls - INFO - Epoch(val) [82][11]	accuracy_top-1: 90.5882, accuracy_top-5: 99.4118
2024-03-03 04:27:07,318 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-03-03 04:27:09,768 - mmcls - INFO - Epoch(val) [83][11]	accuracy_top-1: 93.5294, accuracy_top-5: 100.0000
2024-03-03 04:27:21,219 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-03-03 04:27:24,470 - mmcls - INFO - Epoch(val) [84][11]	accuracy_top-1: 92.3529, accuracy_top-5: 99.4118
2024-03-03 04:27:35,876 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-03-03 04:27:38,494 - mmcls - INFO - Epoch(val) [85][11]	accuracy_top-1: 91.1765, accuracy_top-5: 100.0000
2024-03-03 04:27:49,602 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-03-03 04:27:52,076 - mmcls - INFO - Epoch(val) [86][11]	accuracy_top-1: 94.1176, accuracy_top-5: 99.4118
2024-03-03 04:28:03,384 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-03-03 04:28:05,852 - mmcls - INFO - Epoch(val) [87][11]	accuracy_top-1: 94.1176, accuracy_top-5: 100.0000
2024-03-03 04:28:16,883 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-03-03 04:28:19,360 - mmcls - INFO - Epoch(val) [88][11]	accuracy_top-1: 96.4706, accuracy_top-5: 100.0000
2024-03-03 04:28:30,060 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-03-03 04:28:32,493 - mmcls - INFO - Epoch(val) [89][11]	accuracy_top-1: 90.5882, accuracy_top-5: 100.0000
2024-03-03 04:28:43,401 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-03-03 04:28:45,885 - mmcls - INFO - Epoch(val) [90][11]	accuracy_top-1: 97.6471, accuracy_top-5: 99.4118
2024-03-03 04:28:57,017 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-03-03 04:28:59,510 - mmcls - INFO - Epoch(val) [91][11]	accuracy_top-1: 93.5294, accuracy_top-5: 99.4118
2024-03-03 04:29:10,598 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-03-03 04:29:13,411 - mmcls - INFO - Epoch(val) [92][11]	accuracy_top-1: 93.5294, accuracy_top-5: 100.0000
2024-03-03 04:29:24,316 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-03-03 04:29:27,255 - mmcls - INFO - Epoch(val) [93][11]	accuracy_top-1: 92.3529, accuracy_top-5: 99.4118
2024-03-03 04:29:38,346 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-03-03 04:29:41,063 - mmcls - INFO - Epoch(val) [94][11]	accuracy_top-1: 95.2941, accuracy_top-5: 100.0000
2024-03-03 04:29:52,151 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-03-03 04:29:54,740 - mmcls - INFO - Epoch(val) [95][11]	accuracy_top-1: 93.5294, accuracy_top-5: 100.0000
2024-03-03 04:30:05,947 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-03-03 04:30:08,532 - mmcls - INFO - Epoch(val) [96][11]	accuracy_top-1: 94.7059, accuracy_top-5: 100.0000
2024-03-03 04:30:20,073 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-03-03 04:30:22,573 - mmcls - INFO - Epoch(val) [97][11]	accuracy_top-1: 98.2353, accuracy_top-5: 100.0000
2024-03-03 04:30:33,528 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-03-03 04:30:36,137 - mmcls - INFO - Epoch(val) [98][11]	accuracy_top-1: 97.0588, accuracy_top-5: 100.0000
2024-03-03 04:30:47,146 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-03-03 04:30:49,560 - mmcls - INFO - Epoch(val) [99][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:31:00,559 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-03-03 04:31:03,452 - mmcls - INFO - Epoch(val) [100][11]	accuracy_top-1: 92.9412, accuracy_top-5: 99.4118
2024-03-03 04:31:14,848 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-03-03 04:31:18,396 - mmcls - INFO - Epoch(val) [101][11]	accuracy_top-1: 97.6471, accuracy_top-5: 99.4118
2024-03-03 04:31:29,365 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-03-03 04:31:31,986 - mmcls - INFO - Epoch(val) [102][11]	accuracy_top-1: 98.2353, accuracy_top-5: 99.4118
2024-03-03 04:31:43,044 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-03-03 04:31:45,775 - mmcls - INFO - Epoch(val) [103][11]	accuracy_top-1: 98.2353, accuracy_top-5: 99.4118
2024-03-03 04:31:56,541 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-03-03 04:31:59,133 - mmcls - INFO - Epoch(val) [104][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:32:10,591 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-03-03 04:32:14,015 - mmcls - INFO - Epoch(val) [105][11]	accuracy_top-1: 97.6471, accuracy_top-5: 99.4118
2024-03-03 04:32:24,924 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-03-03 04:32:27,496 - mmcls - INFO - Epoch(val) [106][11]	accuracy_top-1: 97.6471, accuracy_top-5: 99.4118
2024-03-03 04:32:38,831 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-03-03 04:32:41,377 - mmcls - INFO - Epoch(val) [107][11]	accuracy_top-1: 98.8235, accuracy_top-5: 99.4118
2024-03-03 04:32:52,673 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-03-03 04:32:55,148 - mmcls - INFO - Epoch(val) [108][11]	accuracy_top-1: 98.8235, accuracy_top-5: 99.4118
2024-03-03 04:33:06,062 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-03-03 04:33:08,612 - mmcls - INFO - Epoch(val) [109][11]	accuracy_top-1: 98.8235, accuracy_top-5: 99.4118
2024-03-03 04:33:19,652 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-03-03 04:33:22,200 - mmcls - INFO - Epoch(val) [110][11]	accuracy_top-1: 97.6471, accuracy_top-5: 99.4118
2024-03-03 04:33:33,435 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-03-03 04:33:36,388 - mmcls - INFO - Epoch(val) [111][11]	accuracy_top-1: 98.2353, accuracy_top-5: 100.0000
2024-03-03 04:33:47,399 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-03-03 04:33:50,166 - mmcls - INFO - Epoch(val) [112][11]	accuracy_top-1: 98.8235, accuracy_top-5: 99.4118
2024-03-03 04:34:00,877 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-03-03 04:34:03,619 - mmcls - INFO - Epoch(val) [113][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:34:15,028 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-03-03 04:34:17,480 - mmcls - INFO - Epoch(val) [114][11]	accuracy_top-1: 99.4118, accuracy_top-5: 99.4118
2024-03-03 04:34:28,978 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-03-03 04:34:31,418 - mmcls - INFO - Epoch(val) [115][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:34:42,402 - mmcls - INFO - Saving checkpoint at 116 epochs
2024-03-03 04:34:44,804 - mmcls - INFO - Epoch(val) [116][11]	accuracy_top-1: 98.2353, accuracy_top-5: 100.0000
2024-03-03 04:34:55,910 - mmcls - INFO - Saving checkpoint at 117 epochs
2024-03-03 04:34:58,550 - mmcls - INFO - Epoch(val) [117][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:35:09,602 - mmcls - INFO - Saving checkpoint at 118 epochs
2024-03-03 04:35:12,175 - mmcls - INFO - Epoch(val) [118][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:35:23,684 - mmcls - INFO - Saving checkpoint at 119 epochs
2024-03-03 04:35:26,129 - mmcls - INFO - Epoch(val) [119][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:35:37,224 - mmcls - INFO - Saving checkpoint at 120 epochs
2024-03-03 04:35:39,863 - mmcls - INFO - Epoch(val) [120][11]	accuracy_top-1: 99.4118, accuracy_top-5: 99.4118
2024-03-03 04:35:50,910 - mmcls - INFO - Saving checkpoint at 121 epochs
2024-03-03 04:35:53,324 - mmcls - INFO - Epoch(val) [121][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:36:04,338 - mmcls - INFO - Saving checkpoint at 122 epochs
2024-03-03 04:36:07,509 - mmcls - INFO - Epoch(val) [122][11]	accuracy_top-1: 98.2353, accuracy_top-5: 100.0000
2024-03-03 04:36:18,663 - mmcls - INFO - Saving checkpoint at 123 epochs
2024-03-03 04:36:21,385 - mmcls - INFO - Epoch(val) [123][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:36:32,650 - mmcls - INFO - Saving checkpoint at 124 epochs
2024-03-03 04:36:35,439 - mmcls - INFO - Epoch(val) [124][11]	accuracy_top-1: 99.4118, accuracy_top-5: 99.4118
2024-03-03 04:36:46,579 - mmcls - INFO - Saving checkpoint at 125 epochs
2024-03-03 04:36:49,095 - mmcls - INFO - Epoch(val) [125][11]	accuracy_top-1: 98.8235, accuracy_top-5: 99.4118
2024-03-03 04:37:00,108 - mmcls - INFO - Saving checkpoint at 126 epochs
2024-03-03 04:37:02,597 - mmcls - INFO - Epoch(val) [126][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:37:13,832 - mmcls - INFO - Saving checkpoint at 127 epochs
2024-03-03 04:37:17,098 - mmcls - INFO - Epoch(val) [127][11]	accuracy_top-1: 99.4118, accuracy_top-5: 99.4118
2024-03-03 04:37:28,260 - mmcls - INFO - Saving checkpoint at 128 epochs
2024-03-03 04:37:30,951 - mmcls - INFO - Epoch(val) [128][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:37:41,763 - mmcls - INFO - Saving checkpoint at 129 epochs
2024-03-03 04:37:44,405 - mmcls - INFO - Epoch(val) [129][11]	accuracy_top-1: 98.8235, accuracy_top-5: 99.4118
2024-03-03 04:37:55,592 - mmcls - INFO - Saving checkpoint at 130 epochs
2024-03-03 04:37:58,665 - mmcls - INFO - Epoch(val) [130][11]	accuracy_top-1: 99.4118, accuracy_top-5: 99.4118
2024-03-03 04:38:10,285 - mmcls - INFO - Saving checkpoint at 131 epochs
2024-03-03 04:38:13,024 - mmcls - INFO - Epoch(val) [131][11]	accuracy_top-1: 99.4118, accuracy_top-5: 99.4118
2024-03-03 04:38:24,139 - mmcls - INFO - Saving checkpoint at 132 epochs
2024-03-03 04:38:27,587 - mmcls - INFO - Epoch(val) [132][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:38:38,667 - mmcls - INFO - Saving checkpoint at 133 epochs
2024-03-03 04:38:40,999 - mmcls - INFO - Epoch(val) [133][11]	accuracy_top-1: 98.2353, accuracy_top-5: 100.0000
2024-03-03 04:38:52,076 - mmcls - INFO - Saving checkpoint at 134 epochs
2024-03-03 04:38:54,975 - mmcls - INFO - Epoch(val) [134][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:39:06,067 - mmcls - INFO - Saving checkpoint at 135 epochs
2024-03-03 04:39:08,496 - mmcls - INFO - Epoch(val) [135][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:39:19,433 - mmcls - INFO - Saving checkpoint at 136 epochs
2024-03-03 04:39:22,164 - mmcls - INFO - Epoch(val) [136][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:39:33,383 - mmcls - INFO - Saving checkpoint at 137 epochs
2024-03-03 04:39:36,191 - mmcls - INFO - Epoch(val) [137][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:39:47,725 - mmcls - INFO - Saving checkpoint at 138 epochs
2024-03-03 04:39:50,517 - mmcls - INFO - Epoch(val) [138][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:40:01,426 - mmcls - INFO - Saving checkpoint at 139 epochs
2024-03-03 04:40:03,948 - mmcls - INFO - Epoch(val) [139][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:40:15,058 - mmcls - INFO - Saving checkpoint at 140 epochs
2024-03-03 04:40:17,604 - mmcls - INFO - Epoch(val) [140][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:40:28,477 - mmcls - INFO - Saving checkpoint at 141 epochs
2024-03-03 04:40:31,181 - mmcls - INFO - Epoch(val) [141][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:40:42,434 - mmcls - INFO - Saving checkpoint at 142 epochs
2024-03-03 04:40:45,021 - mmcls - INFO - Epoch(val) [142][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:40:56,150 - mmcls - INFO - Saving checkpoint at 143 epochs
2024-03-03 04:40:58,663 - mmcls - INFO - Epoch(val) [143][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:41:09,974 - mmcls - INFO - Saving checkpoint at 144 epochs
2024-03-03 04:41:12,418 - mmcls - INFO - Epoch(val) [144][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:41:23,551 - mmcls - INFO - Saving checkpoint at 145 epochs
2024-03-03 04:41:26,366 - mmcls - INFO - Epoch(val) [145][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:41:37,516 - mmcls - INFO - Saving checkpoint at 146 epochs
2024-03-03 04:41:40,273 - mmcls - INFO - Epoch(val) [146][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:41:51,405 - mmcls - INFO - Saving checkpoint at 147 epochs
2024-03-03 04:41:54,233 - mmcls - INFO - Epoch(val) [147][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:42:05,444 - mmcls - INFO - Saving checkpoint at 148 epochs
2024-03-03 04:42:08,080 - mmcls - INFO - Epoch(val) [148][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:42:19,233 - mmcls - INFO - Saving checkpoint at 149 epochs
2024-03-03 04:42:21,980 - mmcls - INFO - Epoch(val) [149][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:42:33,517 - mmcls - INFO - Saving checkpoint at 150 epochs
2024-03-03 04:42:35,956 - mmcls - INFO - Epoch(val) [150][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:42:46,956 - mmcls - INFO - Saving checkpoint at 151 epochs
2024-03-03 04:42:49,565 - mmcls - INFO - Epoch(val) [151][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:43:00,624 - mmcls - INFO - Saving checkpoint at 152 epochs
2024-03-03 04:43:03,335 - mmcls - INFO - Epoch(val) [152][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:43:14,481 - mmcls - INFO - Saving checkpoint at 153 epochs
2024-03-03 04:43:16,990 - mmcls - INFO - Epoch(val) [153][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:43:28,127 - mmcls - INFO - Saving checkpoint at 154 epochs
2024-03-03 04:43:30,825 - mmcls - INFO - Epoch(val) [154][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:43:42,222 - mmcls - INFO - Saving checkpoint at 155 epochs
2024-03-03 04:43:44,705 - mmcls - INFO - Epoch(val) [155][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:43:56,580 - mmcls - INFO - Saving checkpoint at 156 epochs
2024-03-03 04:43:59,179 - mmcls - INFO - Epoch(val) [156][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:44:10,121 - mmcls - INFO - Saving checkpoint at 157 epochs
2024-03-03 04:44:12,539 - mmcls - INFO - Epoch(val) [157][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:44:23,440 - mmcls - INFO - Saving checkpoint at 158 epochs
2024-03-03 04:44:27,231 - mmcls - INFO - Epoch(val) [158][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:44:38,199 - mmcls - INFO - Saving checkpoint at 159 epochs
2024-03-03 04:44:40,858 - mmcls - INFO - Epoch(val) [159][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:44:52,035 - mmcls - INFO - Saving checkpoint at 160 epochs
2024-03-03 04:44:54,574 - mmcls - INFO - Epoch(val) [160][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:45:05,831 - mmcls - INFO - Saving checkpoint at 161 epochs
2024-03-03 04:45:08,450 - mmcls - INFO - Epoch(val) [161][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:45:19,527 - mmcls - INFO - Saving checkpoint at 162 epochs
2024-03-03 04:45:22,628 - mmcls - INFO - Epoch(val) [162][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:45:33,910 - mmcls - INFO - Saving checkpoint at 163 epochs
2024-03-03 04:45:36,355 - mmcls - INFO - Epoch(val) [163][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:45:47,561 - mmcls - INFO - Saving checkpoint at 164 epochs
2024-03-03 04:45:50,169 - mmcls - INFO - Epoch(val) [164][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:46:01,243 - mmcls - INFO - Saving checkpoint at 165 epochs
2024-03-03 04:46:03,857 - mmcls - INFO - Epoch(val) [165][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:46:14,936 - mmcls - INFO - Saving checkpoint at 166 epochs
2024-03-03 04:46:17,499 - mmcls - INFO - Epoch(val) [166][11]	accuracy_top-1: 100.0000, accuracy_top-5: 100.0000
2024-03-03 04:46:28,604 - mmcls - INFO - Saving checkpoint at 167 epochs
2024-03-03 04:46:31,057 - mmcls - INFO - Epoch(val) [167][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:46:42,337 - mmcls - INFO - Saving checkpoint at 168 epochs
2024-03-03 04:46:44,747 - mmcls - INFO - Epoch(val) [168][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:46:55,881 - mmcls - INFO - Saving checkpoint at 169 epochs
2024-03-03 04:46:58,398 - mmcls - INFO - Epoch(val) [169][11]	accuracy_top-1: 98.8235, accuracy_top-5: 100.0000
2024-03-03 04:47:09,467 - mmcls - INFO - Saving checkpoint at 170 epochs
2024-03-03 04:47:11,919 - mmcls - INFO - Epoch(val) [170][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:47:23,012 - mmcls - INFO - Saving checkpoint at 171 epochs
2024-03-03 04:47:25,500 - mmcls - INFO - Epoch(val) [171][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:47:36,613 - mmcls - INFO - Saving checkpoint at 172 epochs
2024-03-03 04:47:39,061 - mmcls - INFO - Epoch(val) [172][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:47:50,664 - mmcls - INFO - Saving checkpoint at 173 epochs
2024-03-03 04:47:53,568 - mmcls - INFO - Epoch(val) [173][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:48:04,943 - mmcls - INFO - Saving checkpoint at 174 epochs
2024-03-03 04:48:07,539 - mmcls - INFO - Epoch(val) [174][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:48:18,303 - mmcls - INFO - Saving checkpoint at 175 epochs
2024-03-03 04:48:20,635 - mmcls - INFO - Epoch(val) [175][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:48:31,696 - mmcls - INFO - Saving checkpoint at 176 epochs
2024-03-03 04:48:34,601 - mmcls - INFO - Epoch(val) [176][11]	accuracy_top-1: 100.0000, accuracy_top-5: 100.0000
2024-03-03 04:48:45,502 - mmcls - INFO - Saving checkpoint at 177 epochs
2024-03-03 04:48:47,983 - mmcls - INFO - Epoch(val) [177][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:48:59,066 - mmcls - INFO - Saving checkpoint at 178 epochs
2024-03-03 04:49:01,581 - mmcls - INFO - Epoch(val) [178][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:49:12,852 - mmcls - INFO - Saving checkpoint at 179 epochs
2024-03-03 04:49:15,352 - mmcls - INFO - Epoch(val) [179][11]	accuracy_top-1: 100.0000, accuracy_top-5: 100.0000
2024-03-03 04:49:26,868 - mmcls - INFO - Saving checkpoint at 180 epochs
2024-03-03 04:49:29,562 - mmcls - INFO - Epoch(val) [180][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:49:40,698 - mmcls - INFO - Saving checkpoint at 181 epochs
2024-03-03 04:49:43,940 - mmcls - INFO - Epoch(val) [181][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:49:55,231 - mmcls - INFO - Saving checkpoint at 182 epochs
2024-03-03 04:49:57,640 - mmcls - INFO - Epoch(val) [182][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:50:08,760 - mmcls - INFO - Saving checkpoint at 183 epochs
2024-03-03 04:50:11,678 - mmcls - INFO - Epoch(val) [183][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:50:22,889 - mmcls - INFO - Saving checkpoint at 184 epochs
2024-03-03 04:50:25,447 - mmcls - INFO - Epoch(val) [184][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:50:36,382 - mmcls - INFO - Saving checkpoint at 185 epochs
2024-03-03 04:50:38,949 - mmcls - INFO - Epoch(val) [185][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:50:49,827 - mmcls - INFO - Saving checkpoint at 186 epochs
2024-03-03 04:50:52,329 - mmcls - INFO - Epoch(val) [186][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:51:03,178 - mmcls - INFO - Saving checkpoint at 187 epochs
2024-03-03 04:51:05,665 - mmcls - INFO - Epoch(val) [187][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:51:16,586 - mmcls - INFO - Saving checkpoint at 188 epochs
2024-03-03 04:51:19,234 - mmcls - INFO - Epoch(val) [188][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:51:30,341 - mmcls - INFO - Saving checkpoint at 189 epochs
2024-03-03 04:51:32,935 - mmcls - INFO - Epoch(val) [189][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:51:44,134 - mmcls - INFO - Saving checkpoint at 190 epochs
2024-03-03 04:51:47,059 - mmcls - INFO - Epoch(val) [190][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:51:57,951 - mmcls - INFO - Saving checkpoint at 191 epochs
2024-03-03 04:52:00,600 - mmcls - INFO - Epoch(val) [191][11]	accuracy_top-1: 100.0000, accuracy_top-5: 100.0000
2024-03-03 04:52:11,793 - mmcls - INFO - Saving checkpoint at 192 epochs
2024-03-03 04:52:14,255 - mmcls - INFO - Epoch(val) [192][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:52:25,220 - mmcls - INFO - Saving checkpoint at 193 epochs
2024-03-03 04:52:27,733 - mmcls - INFO - Epoch(val) [193][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:52:38,876 - mmcls - INFO - Saving checkpoint at 194 epochs
2024-03-03 04:52:41,405 - mmcls - INFO - Epoch(val) [194][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:52:52,268 - mmcls - INFO - Saving checkpoint at 195 epochs
2024-03-03 04:52:54,890 - mmcls - INFO - Epoch(val) [195][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:53:06,110 - mmcls - INFO - Saving checkpoint at 196 epochs
2024-03-03 04:53:08,560 - mmcls - INFO - Epoch(val) [196][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:53:19,758 - mmcls - INFO - Saving checkpoint at 197 epochs
2024-03-03 04:53:22,455 - mmcls - INFO - Epoch(val) [197][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:53:33,430 - mmcls - INFO - Saving checkpoint at 198 epochs
2024-03-03 04:53:36,059 - mmcls - INFO - Epoch(val) [198][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:53:47,143 - mmcls - INFO - Saving checkpoint at 199 epochs
2024-03-03 04:53:49,673 - mmcls - INFO - Epoch(val) [199][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
2024-03-03 04:54:00,637 - mmcls - INFO - Saving checkpoint at 200 epochs
2024-03-03 04:54:03,085 - mmcls - INFO - Epoch(val) [200][11]	accuracy_top-1: 99.4118, accuracy_top-5: 100.0000
