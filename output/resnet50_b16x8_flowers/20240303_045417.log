2024-03-03 04:54:17,320 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.8, V11.8.89
GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
PyTorch: 1.7.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.2
OpenCV: 4.9.0
MMCV: 1.5.0
MMCV Compiler: GCC 11.4
MMCV CUDA Compiler: 11.8
MMClassification: 0.15.0+f1f3901
------------------------------------------------------------

2024-03-03 04:54:17,322 - mmcls - INFO - Distributed training: False
2024-03-03 04:54:17,523 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(3, ),
        style='pytorch'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=17,
        in_channels=2048,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0)))
dataset_type = 'Flowers'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1)),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=1,
    train=dict(
        type='Flowers',
        data_prefix='data/flowers/train',
        ann_file='data/flowers/meta/train.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='Flowers',
        data_prefix='data/flowers/val',
        ann_file='data/flowers/meta/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1)),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(interval=1, metric='accuracy')
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', step=[100, 150])
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=1)
log_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'output/resnet50_b16x8_flowers'
gpu_ids = range(0, 1)

2024-03-03 04:54:17,853 - mmcls - INFO - initialize ResNet with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d']}, {'type': 'Constant', 'val': 1, 'layer': ['_BatchNorm', 'GroupNorm']}]
2024-03-03 04:54:18,178 - mmcls - INFO - initialize LinearClsHead with init_cfg {'type': 'Normal', 'layer': 'Linear', 'std': 0.01}
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.bn3.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.bn3.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn1.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.bn2.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.fc.weight - torch.Size([17, 2048]): 
NormalInit: mean=0, std=0.01, bias=0 

head.fc.bias - torch.Size([17]): 
NormalInit: mean=0, std=0.01, bias=0 
2024-03-03 04:54:22,286 - mmcls - INFO - Start running, host: u3311680@gpu2-comp-112, work_dir: /userhome/cs2/u3311680/oxford-cnn/output/resnet50_b16x8_flowers
2024-03-03 04:54:22,287 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(NORMAL      ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2024-03-03 04:54:22,287 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2024-03-03 04:54:22,288 - mmcls - INFO - Checkpoints will be saved to /userhome/cs2/u3311680/oxford-cnn/output/resnet50_b16x8_flowers by HardDiskBackend.
2024-03-03 04:54:32,465 - mmcls - INFO - Epoch [1][100/169]	lr: 1.000e-01, eta: 0:57:06, time: 0.102, data_time: 0.027, memory: 984, loss: 4.2803
2024-03-03 04:54:38,708 - mmcls - INFO - Saving checkpoint at 1 epochs
2024-03-03 04:54:42,102 - mmcls - INFO - Epoch(val) [1][22]	accuracy_top-1: 15.8824, accuracy_top-5: 65.8824
2024-03-03 04:54:51,456 - mmcls - INFO - Epoch [2][100/169]	lr: 1.000e-01, eta: 0:40:31, time: 0.093, data_time: 0.027, memory: 984, loss: 2.4616
2024-03-03 04:54:55,854 - mmcls - INFO - Saving checkpoint at 2 epochs
2024-03-03 04:54:58,291 - mmcls - INFO - Epoch(val) [2][22]	accuracy_top-1: 20.0000, accuracy_top-5: 76.4706
2024-03-03 04:55:08,258 - mmcls - INFO - Epoch [3][100/169]	lr: 1.000e-01, eta: 0:37:14, time: 0.098, data_time: 0.028, memory: 984, loss: 2.3008
2024-03-03 04:55:13,019 - mmcls - INFO - Saving checkpoint at 3 epochs
2024-03-03 04:55:16,039 - mmcls - INFO - Epoch(val) [3][22]	accuracy_top-1: 23.5294, accuracy_top-5: 77.6471
2024-03-03 04:55:25,931 - mmcls - INFO - Epoch [4][100/169]	lr: 1.000e-01, eta: 0:35:24, time: 0.095, data_time: 0.028, memory: 984, loss: 2.2134
2024-03-03 04:55:31,275 - mmcls - INFO - Saving checkpoint at 4 epochs
2024-03-03 04:55:33,750 - mmcls - INFO - Epoch(val) [4][22]	accuracy_top-1: 36.4706, accuracy_top-5: 85.2941
2024-03-03 04:55:43,097 - mmcls - INFO - Epoch [5][100/169]	lr: 1.000e-01, eta: 0:34:11, time: 0.093, data_time: 0.027, memory: 984, loss: 2.0406
2024-03-03 04:55:48,612 - mmcls - INFO - Saving checkpoint at 5 epochs
2024-03-03 04:55:52,478 - mmcls - INFO - Epoch(val) [5][22]	accuracy_top-1: 44.1176, accuracy_top-5: 89.4118
2024-03-03 04:56:02,577 - mmcls - INFO - Epoch [6][100/169]	lr: 1.000e-01, eta: 0:33:46, time: 0.101, data_time: 0.029, memory: 984, loss: 1.8637
2024-03-03 04:56:08,447 - mmcls - INFO - Saving checkpoint at 6 epochs
2024-03-03 04:56:11,148 - mmcls - INFO - Epoch(val) [6][22]	accuracy_top-1: 50.5882, accuracy_top-5: 94.7059
2024-03-03 04:56:21,573 - mmcls - INFO - Epoch [7][100/169]	lr: 1.000e-01, eta: 0:33:35, time: 0.104, data_time: 0.029, memory: 984, loss: 1.8330
2024-03-03 04:56:26,960 - mmcls - INFO - Saving checkpoint at 7 epochs
2024-03-03 04:56:29,512 - mmcls - INFO - Epoch(val) [7][22]	accuracy_top-1: 42.9412, accuracy_top-5: 90.5882
2024-03-03 04:56:38,743 - mmcls - INFO - Epoch [8][100/169]	lr: 1.000e-01, eta: 0:32:54, time: 0.092, data_time: 0.027, memory: 984, loss: 1.7115
2024-03-03 04:56:43,907 - mmcls - INFO - Saving checkpoint at 8 epochs
2024-03-03 04:56:46,558 - mmcls - INFO - Epoch(val) [8][22]	accuracy_top-1: 46.4706, accuracy_top-5: 86.4706
2024-03-03 04:56:55,871 - mmcls - INFO - Epoch [9][100/169]	lr: 1.000e-01, eta: 0:32:23, time: 0.093, data_time: 0.027, memory: 984, loss: 1.8660
2024-03-03 04:57:00,985 - mmcls - INFO - Saving checkpoint at 9 epochs
2024-03-03 04:57:04,049 - mmcls - INFO - Epoch(val) [9][22]	accuracy_top-1: 51.7647, accuracy_top-5: 88.8235
2024-03-03 04:57:14,587 - mmcls - INFO - Epoch [10][100/169]	lr: 1.000e-01, eta: 0:32:17, time: 0.104, data_time: 0.029, memory: 984, loss: 1.7461
2024-03-03 04:57:21,173 - mmcls - INFO - Saving checkpoint at 10 epochs
2024-03-03 04:57:24,163 - mmcls - INFO - Epoch(val) [10][22]	accuracy_top-1: 47.6471, accuracy_top-5: 95.8824
2024-03-03 04:57:34,233 - mmcls - INFO - Epoch [11][100/169]	lr: 1.000e-01, eta: 0:32:05, time: 0.101, data_time: 0.028, memory: 984, loss: 1.7110
2024-03-03 04:57:39,408 - mmcls - INFO - Saving checkpoint at 11 epochs
2024-03-03 04:57:42,063 - mmcls - INFO - Epoch(val) [11][22]	accuracy_top-1: 60.5882, accuracy_top-5: 97.6471
2024-03-03 04:57:52,081 - mmcls - INFO - Epoch [12][100/169]	lr: 1.000e-01, eta: 0:31:52, time: 0.100, data_time: 0.027, memory: 984, loss: 1.6005
2024-03-03 04:57:57,158 - mmcls - INFO - Saving checkpoint at 12 epochs
2024-03-03 04:58:00,151 - mmcls - INFO - Epoch(val) [12][22]	accuracy_top-1: 67.0588, accuracy_top-5: 97.0588
2024-03-03 04:58:10,582 - mmcls - INFO - Epoch [13][100/169]	lr: 1.000e-01, eta: 0:31:46, time: 0.104, data_time: 0.029, memory: 984, loss: 1.6288
2024-03-03 04:58:16,176 - mmcls - INFO - Saving checkpoint at 13 epochs
2024-03-03 04:58:20,080 - mmcls - INFO - Epoch(val) [13][22]	accuracy_top-1: 60.0000, accuracy_top-5: 95.2941
2024-03-03 04:58:29,720 - mmcls - INFO - Epoch [14][100/169]	lr: 1.000e-01, eta: 0:31:28, time: 0.096, data_time: 0.027, memory: 984, loss: 1.4840
2024-03-03 04:58:34,887 - mmcls - INFO - Saving checkpoint at 14 epochs
2024-03-03 04:58:37,362 - mmcls - INFO - Epoch(val) [14][22]	accuracy_top-1: 57.6471, accuracy_top-5: 95.8824
2024-03-03 04:58:47,491 - mmcls - INFO - Epoch [15][100/169]	lr: 1.000e-01, eta: 0:31:18, time: 0.101, data_time: 0.027, memory: 984, loss: 1.5594
2024-03-03 04:58:52,698 - mmcls - INFO - Saving checkpoint at 15 epochs
2024-03-03 04:58:55,659 - mmcls - INFO - Epoch(val) [15][22]	accuracy_top-1: 64.7059, accuracy_top-5: 95.8824
2024-03-03 04:59:05,033 - mmcls - INFO - Epoch [16][100/169]	lr: 1.000e-01, eta: 0:30:59, time: 0.094, data_time: 0.027, memory: 984, loss: 1.3699
2024-03-03 04:59:10,346 - mmcls - INFO - Saving checkpoint at 16 epochs
2024-03-03 04:59:12,819 - mmcls - INFO - Epoch(val) [16][22]	accuracy_top-1: 58.8235, accuracy_top-5: 97.6471
2024-03-03 04:59:22,916 - mmcls - INFO - Epoch [17][100/169]	lr: 1.000e-01, eta: 0:30:49, time: 0.101, data_time: 0.029, memory: 984, loss: 1.3063
2024-03-03 04:59:28,044 - mmcls - INFO - Saving checkpoint at 17 epochs
2024-03-03 04:59:30,578 - mmcls - INFO - Epoch(val) [17][22]	accuracy_top-1: 66.4706, accuracy_top-5: 97.0588
2024-03-03 04:59:40,481 - mmcls - INFO - Epoch [18][100/169]	lr: 1.000e-01, eta: 0:30:37, time: 0.099, data_time: 0.027, memory: 984, loss: 1.3829
2024-03-03 04:59:45,771 - mmcls - INFO - Saving checkpoint at 18 epochs
2024-03-03 04:59:48,782 - mmcls - INFO - Epoch(val) [18][22]	accuracy_top-1: 65.8824, accuracy_top-5: 98.8235
2024-03-03 04:59:58,501 - mmcls - INFO - Epoch [19][100/169]	lr: 1.000e-01, eta: 0:30:23, time: 0.097, data_time: 0.028, memory: 984, loss: 1.3360
2024-03-03 05:00:03,357 - mmcls - INFO - Saving checkpoint at 19 epochs
2024-03-03 05:00:06,106 - mmcls - INFO - Epoch(val) [19][22]	accuracy_top-1: 67.0588, accuracy_top-5: 97.6471
2024-03-03 05:00:15,743 - mmcls - INFO - Epoch [20][100/169]	lr: 1.000e-01, eta: 0:30:09, time: 0.096, data_time: 0.029, memory: 984, loss: 1.3173
2024-03-03 05:00:20,938 - mmcls - INFO - Saving checkpoint at 20 epochs
2024-03-03 05:00:23,851 - mmcls - INFO - Epoch(val) [20][22]	accuracy_top-1: 63.5294, accuracy_top-5: 97.6471
2024-03-03 05:00:33,117 - mmcls - INFO - Epoch [21][100/169]	lr: 1.000e-01, eta: 0:29:52, time: 0.092, data_time: 0.027, memory: 984, loss: 1.2859
2024-03-03 05:00:37,605 - mmcls - INFO - Saving checkpoint at 21 epochs
2024-03-03 05:00:39,963 - mmcls - INFO - Epoch(val) [21][22]	accuracy_top-1: 56.4706, accuracy_top-5: 96.4706
2024-03-03 05:00:50,079 - mmcls - INFO - Epoch [22][100/169]	lr: 1.000e-01, eta: 0:29:43, time: 0.101, data_time: 0.028, memory: 984, loss: 1.3410
2024-03-03 05:00:55,061 - mmcls - INFO - Saving checkpoint at 22 epochs
2024-03-03 05:00:57,797 - mmcls - INFO - Epoch(val) [22][22]	accuracy_top-1: 59.4118, accuracy_top-5: 97.0588
2024-03-03 05:01:07,782 - mmcls - INFO - Epoch [23][100/169]	lr: 1.000e-01, eta: 0:29:32, time: 0.099, data_time: 0.027, memory: 984, loss: 1.2935
2024-03-03 05:01:12,793 - mmcls - INFO - Saving checkpoint at 23 epochs
2024-03-03 05:01:15,519 - mmcls - INFO - Epoch(val) [23][22]	accuracy_top-1: 71.1765, accuracy_top-5: 98.8235
2024-03-03 05:01:25,611 - mmcls - INFO - Epoch [24][100/169]	lr: 1.000e-01, eta: 0:29:23, time: 0.101, data_time: 0.028, memory: 984, loss: 1.2198
2024-03-03 05:01:31,179 - mmcls - INFO - Saving checkpoint at 24 epochs
2024-03-03 05:01:34,097 - mmcls - INFO - Epoch(val) [24][22]	accuracy_top-1: 68.2353, accuracy_top-5: 97.0588
2024-03-03 05:01:44,287 - mmcls - INFO - Epoch [25][100/169]	lr: 1.000e-01, eta: 0:29:14, time: 0.102, data_time: 0.028, memory: 984, loss: 1.2188
2024-03-03 05:01:49,954 - mmcls - INFO - Saving checkpoint at 25 epochs
2024-03-03 05:01:52,910 - mmcls - INFO - Epoch(val) [25][22]	accuracy_top-1: 72.9412, accuracy_top-5: 100.0000
2024-03-03 05:02:03,357 - mmcls - INFO - Epoch [26][100/169]	lr: 1.000e-01, eta: 0:29:06, time: 0.103, data_time: 0.028, memory: 984, loss: 1.1700
2024-03-03 05:02:08,422 - mmcls - INFO - Saving checkpoint at 26 epochs
2024-03-03 05:02:10,923 - mmcls - INFO - Epoch(val) [26][22]	accuracy_top-1: 69.4118, accuracy_top-5: 94.7059
2024-03-03 05:02:20,754 - mmcls - INFO - Epoch [27][100/169]	lr: 1.000e-01, eta: 0:28:55, time: 0.098, data_time: 0.028, memory: 984, loss: 1.2206
2024-03-03 05:02:27,292 - mmcls - INFO - Saving checkpoint at 27 epochs
2024-03-03 05:02:29,776 - mmcls - INFO - Epoch(val) [27][22]	accuracy_top-1: 69.4118, accuracy_top-5: 97.6471
2024-03-03 05:02:39,715 - mmcls - INFO - Epoch [28][100/169]	lr: 1.000e-01, eta: 0:28:44, time: 0.099, data_time: 0.028, memory: 984, loss: 1.1616
2024-03-03 05:02:44,471 - mmcls - INFO - Saving checkpoint at 28 epochs
2024-03-03 05:02:46,943 - mmcls - INFO - Epoch(val) [28][22]	accuracy_top-1: 72.3529, accuracy_top-5: 98.8235
2024-03-03 05:02:57,343 - mmcls - INFO - Epoch [29][100/169]	lr: 1.000e-01, eta: 0:28:36, time: 0.104, data_time: 0.028, memory: 984, loss: 1.2312
2024-03-03 05:03:02,660 - mmcls - INFO - Saving checkpoint at 29 epochs
2024-03-03 05:03:05,165 - mmcls - INFO - Epoch(val) [29][22]	accuracy_top-1: 76.4706, accuracy_top-5: 98.8235
2024-03-03 05:03:15,393 - mmcls - INFO - Epoch [30][100/169]	lr: 1.000e-01, eta: 0:28:27, time: 0.101, data_time: 0.028, memory: 984, loss: 1.1163
2024-03-03 05:03:21,193 - mmcls - INFO - Saving checkpoint at 30 epochs
2024-03-03 05:03:23,983 - mmcls - INFO - Epoch(val) [30][22]	accuracy_top-1: 75.8824, accuracy_top-5: 98.2353
2024-03-03 05:03:35,063 - mmcls - INFO - Epoch [31][100/169]	lr: 1.000e-01, eta: 0:28:22, time: 0.111, data_time: 0.029, memory: 984, loss: 1.1224
2024-03-03 05:03:40,697 - mmcls - INFO - Saving checkpoint at 31 epochs
2024-03-03 05:03:43,357 - mmcls - INFO - Epoch(val) [31][22]	accuracy_top-1: 78.8235, accuracy_top-5: 97.0588
2024-03-03 05:03:54,231 - mmcls - INFO - Epoch [32][100/169]	lr: 1.000e-01, eta: 0:28:17, time: 0.109, data_time: 0.029, memory: 984, loss: 1.0858
2024-03-03 05:03:59,625 - mmcls - INFO - Saving checkpoint at 32 epochs
2024-03-03 05:04:02,091 - mmcls - INFO - Epoch(val) [32][22]	accuracy_top-1: 73.5294, accuracy_top-5: 99.4118
2024-03-03 05:04:13,334 - mmcls - INFO - Epoch [33][100/169]	lr: 1.000e-01, eta: 0:28:11, time: 0.110, data_time: 0.028, memory: 984, loss: 1.0897
2024-03-03 05:04:18,551 - mmcls - INFO - Saving checkpoint at 33 epochs
2024-03-03 05:04:21,269 - mmcls - INFO - Epoch(val) [33][22]	accuracy_top-1: 78.8235, accuracy_top-5: 98.8235
2024-03-03 05:04:31,124 - mmcls - INFO - Epoch [34][100/169]	lr: 1.000e-01, eta: 0:28:00, time: 0.098, data_time: 0.029, memory: 984, loss: 1.0027
2024-03-03 05:04:36,459 - mmcls - INFO - Saving checkpoint at 34 epochs
2024-03-03 05:04:38,930 - mmcls - INFO - Epoch(val) [34][22]	accuracy_top-1: 76.4706, accuracy_top-5: 98.8235
2024-03-03 05:04:48,441 - mmcls - INFO - Epoch [35][100/169]	lr: 1.000e-01, eta: 0:27:47, time: 0.095, data_time: 0.028, memory: 984, loss: 1.1009
2024-03-03 05:04:53,543 - mmcls - INFO - Saving checkpoint at 35 epochs
2024-03-03 05:04:56,067 - mmcls - INFO - Epoch(val) [35][22]	accuracy_top-1: 71.7647, accuracy_top-5: 97.0588
2024-03-03 05:05:06,805 - mmcls - INFO - Epoch [36][100/169]	lr: 1.000e-01, eta: 0:27:40, time: 0.107, data_time: 0.029, memory: 984, loss: 1.0933
2024-03-03 05:05:12,024 - mmcls - INFO - Saving checkpoint at 36 epochs
2024-03-03 05:05:14,706 - mmcls - INFO - Epoch(val) [36][22]	accuracy_top-1: 60.0000, accuracy_top-5: 92.9412
2024-03-03 05:05:24,148 - mmcls - INFO - Epoch [37][100/169]	lr: 1.000e-01, eta: 0:27:26, time: 0.094, data_time: 0.028, memory: 984, loss: 1.0169
2024-03-03 05:05:29,626 - mmcls - INFO - Saving checkpoint at 37 epochs
2024-03-03 05:05:32,584 - mmcls - INFO - Epoch(val) [37][22]	accuracy_top-1: 81.1765, accuracy_top-5: 99.4118
2024-03-03 05:05:42,094 - mmcls - INFO - Epoch [38][100/169]	lr: 1.000e-01, eta: 0:27:14, time: 0.095, data_time: 0.028, memory: 984, loss: 1.0037
2024-03-03 05:05:47,101 - mmcls - INFO - Saving checkpoint at 38 epochs
2024-03-03 05:05:49,758 - mmcls - INFO - Epoch(val) [38][22]	accuracy_top-1: 77.6471, accuracy_top-5: 98.8235
2024-03-03 05:06:00,009 - mmcls - INFO - Epoch [39][100/169]	lr: 1.000e-01, eta: 0:27:05, time: 0.102, data_time: 0.029, memory: 984, loss: 0.9700
2024-03-03 05:06:06,044 - mmcls - INFO - Saving checkpoint at 39 epochs
2024-03-03 05:06:08,618 - mmcls - INFO - Epoch(val) [39][22]	accuracy_top-1: 82.3529, accuracy_top-5: 98.8235
2024-03-03 05:06:18,261 - mmcls - INFO - Epoch [40][100/169]	lr: 1.000e-01, eta: 0:26:53, time: 0.096, data_time: 0.027, memory: 984, loss: 1.0088
2024-03-03 05:06:23,126 - mmcls - INFO - Saving checkpoint at 40 epochs
2024-03-03 05:06:25,709 - mmcls - INFO - Epoch(val) [40][22]	accuracy_top-1: 75.8824, accuracy_top-5: 98.8235
2024-03-03 05:06:35,053 - mmcls - INFO - Epoch [41][100/169]	lr: 1.000e-01, eta: 0:26:40, time: 0.093, data_time: 0.027, memory: 984, loss: 0.9982
2024-03-03 05:06:40,072 - mmcls - INFO - Saving checkpoint at 41 epochs
2024-03-03 05:06:42,644 - mmcls - INFO - Epoch(val) [41][22]	accuracy_top-1: 80.0000, accuracy_top-5: 98.2353
2024-03-03 05:06:52,768 - mmcls - INFO - Epoch [42][100/169]	lr: 1.000e-01, eta: 0:26:30, time: 0.101, data_time: 0.028, memory: 984, loss: 0.9194
2024-03-03 05:06:59,514 - mmcls - INFO - Saving checkpoint at 42 epochs
2024-03-03 05:07:01,743 - mmcls - INFO - Epoch(val) [42][22]	accuracy_top-1: 80.5882, accuracy_top-5: 98.2353
2024-03-03 05:07:12,103 - mmcls - INFO - Epoch [43][100/169]	lr: 1.000e-01, eta: 0:26:21, time: 0.103, data_time: 0.029, memory: 984, loss: 0.8734
2024-03-03 05:07:17,428 - mmcls - INFO - Saving checkpoint at 43 epochs
2024-03-03 05:07:20,139 - mmcls - INFO - Epoch(val) [43][22]	accuracy_top-1: 72.3529, accuracy_top-5: 98.8235
2024-03-03 05:07:30,401 - mmcls - INFO - Epoch [44][100/169]	lr: 1.000e-01, eta: 0:26:12, time: 0.102, data_time: 0.027, memory: 984, loss: 0.9645
2024-03-03 05:07:37,179 - mmcls - INFO - Saving checkpoint at 44 epochs
2024-03-03 05:07:39,994 - mmcls - INFO - Epoch(val) [44][22]	accuracy_top-1: 80.5882, accuracy_top-5: 99.4118
2024-03-03 05:07:50,707 - mmcls - INFO - Epoch [45][100/169]	lr: 1.000e-01, eta: 0:26:04, time: 0.107, data_time: 0.029, memory: 984, loss: 0.8880
2024-03-03 05:07:56,031 - mmcls - INFO - Saving checkpoint at 45 epochs
2024-03-03 05:07:58,772 - mmcls - INFO - Epoch(val) [45][22]	accuracy_top-1: 84.1176, accuracy_top-5: 100.0000
2024-03-03 05:08:08,550 - mmcls - INFO - Epoch [46][100/169]	lr: 1.000e-01, eta: 0:25:53, time: 0.097, data_time: 0.027, memory: 984, loss: 0.9262
2024-03-03 05:08:13,602 - mmcls - INFO - Saving checkpoint at 46 epochs
2024-03-03 05:08:16,054 - mmcls - INFO - Epoch(val) [46][22]	accuracy_top-1: 83.5294, accuracy_top-5: 98.8235
2024-03-03 05:08:25,456 - mmcls - INFO - Epoch [47][100/169]	lr: 1.000e-01, eta: 0:25:40, time: 0.094, data_time: 0.027, memory: 984, loss: 0.9274
2024-03-03 05:08:30,293 - mmcls - INFO - Saving checkpoint at 47 epochs
2024-03-03 05:08:33,075 - mmcls - INFO - Epoch(val) [47][22]	accuracy_top-1: 80.5882, accuracy_top-5: 98.8235
2024-03-03 05:08:42,598 - mmcls - INFO - Epoch [48][100/169]	lr: 1.000e-01, eta: 0:25:28, time: 0.095, data_time: 0.026, memory: 984, loss: 0.9425
2024-03-03 05:08:47,412 - mmcls - INFO - Saving checkpoint at 48 epochs
2024-03-03 05:08:50,003 - mmcls - INFO - Epoch(val) [48][22]	accuracy_top-1: 82.9412, accuracy_top-5: 100.0000
2024-03-03 05:08:59,673 - mmcls - INFO - Epoch [49][100/169]	lr: 1.000e-01, eta: 0:25:17, time: 0.097, data_time: 0.029, memory: 984, loss: 0.9431
2024-03-03 05:09:05,241 - mmcls - INFO - Saving checkpoint at 49 epochs
2024-03-03 05:09:07,822 - mmcls - INFO - Epoch(val) [49][22]	accuracy_top-1: 79.4118, accuracy_top-5: 99.4118
2024-03-03 05:09:17,413 - mmcls - INFO - Epoch [50][100/169]	lr: 1.000e-01, eta: 0:25:06, time: 0.096, data_time: 0.028, memory: 984, loss: 0.8786
2024-03-03 05:09:22,710 - mmcls - INFO - Saving checkpoint at 50 epochs
2024-03-03 05:09:25,114 - mmcls - INFO - Epoch(val) [50][22]	accuracy_top-1: 87.0588, accuracy_top-5: 99.4118
2024-03-03 05:09:34,359 - mmcls - INFO - Epoch [51][100/169]	lr: 1.000e-01, eta: 0:24:53, time: 0.092, data_time: 0.026, memory: 984, loss: 0.9396
2024-03-03 05:09:39,187 - mmcls - INFO - Saving checkpoint at 51 epochs
2024-03-03 05:09:41,547 - mmcls - INFO - Epoch(val) [51][22]	accuracy_top-1: 80.0000, accuracy_top-5: 99.4118
2024-03-03 05:09:51,381 - mmcls - INFO - Epoch [52][100/169]	lr: 1.000e-01, eta: 0:24:43, time: 0.098, data_time: 0.027, memory: 984, loss: 0.8849
2024-03-03 05:09:56,325 - mmcls - INFO - Saving checkpoint at 52 epochs
2024-03-03 05:09:58,965 - mmcls - INFO - Epoch(val) [52][22]	accuracy_top-1: 81.1765, accuracy_top-5: 99.4118
2024-03-03 05:10:08,480 - mmcls - INFO - Epoch [53][100/169]	lr: 1.000e-01, eta: 0:24:31, time: 0.094, data_time: 0.025, memory: 984, loss: 0.8706
2024-03-03 05:10:13,532 - mmcls - INFO - Saving checkpoint at 53 epochs
2024-03-03 05:10:16,204 - mmcls - INFO - Epoch(val) [53][22]	accuracy_top-1: 72.3529, accuracy_top-5: 98.2353
2024-03-03 05:10:26,211 - mmcls - INFO - Epoch [54][100/169]	lr: 1.000e-01, eta: 0:24:21, time: 0.100, data_time: 0.028, memory: 984, loss: 0.9135
2024-03-03 05:10:31,583 - mmcls - INFO - Saving checkpoint at 54 epochs
2024-03-03 05:10:34,165 - mmcls - INFO - Epoch(val) [54][22]	accuracy_top-1: 78.8235, accuracy_top-5: 97.6471
2024-03-03 05:10:43,997 - mmcls - INFO - Epoch [55][100/169]	lr: 1.000e-01, eta: 0:24:11, time: 0.098, data_time: 0.027, memory: 984, loss: 0.8720
2024-03-03 05:10:48,738 - mmcls - INFO - Saving checkpoint at 55 epochs
2024-03-03 05:10:51,122 - mmcls - INFO - Epoch(val) [55][22]	accuracy_top-1: 81.1765, accuracy_top-5: 99.4118
2024-03-03 05:11:01,162 - mmcls - INFO - Epoch [56][100/169]	lr: 1.000e-01, eta: 0:24:01, time: 0.100, data_time: 0.028, memory: 984, loss: 0.8566
2024-03-03 05:11:06,961 - mmcls - INFO - Saving checkpoint at 56 epochs
2024-03-03 05:11:09,509 - mmcls - INFO - Epoch(val) [56][22]	accuracy_top-1: 72.3529, accuracy_top-5: 97.0588
2024-03-03 05:11:20,147 - mmcls - INFO - Epoch [57][100/169]	lr: 1.000e-01, eta: 0:23:52, time: 0.106, data_time: 0.028, memory: 984, loss: 0.8592
2024-03-03 05:11:25,738 - mmcls - INFO - Saving checkpoint at 57 epochs
2024-03-03 05:11:28,981 - mmcls - INFO - Epoch(val) [57][22]	accuracy_top-1: 82.3529, accuracy_top-5: 99.4118
2024-03-03 05:11:38,784 - mmcls - INFO - Epoch [58][100/169]	lr: 1.000e-01, eta: 0:23:42, time: 0.098, data_time: 0.027, memory: 984, loss: 0.7849
2024-03-03 05:11:44,212 - mmcls - INFO - Saving checkpoint at 58 epochs
2024-03-03 05:11:46,826 - mmcls - INFO - Epoch(val) [58][22]	accuracy_top-1: 78.8235, accuracy_top-5: 100.0000
2024-03-03 05:11:56,285 - mmcls - INFO - Epoch [59][100/169]	lr: 1.000e-01, eta: 0:23:31, time: 0.094, data_time: 0.028, memory: 984, loss: 0.8197
2024-03-03 05:12:01,428 - mmcls - INFO - Saving checkpoint at 59 epochs
2024-03-03 05:12:04,087 - mmcls - INFO - Epoch(val) [59][22]	accuracy_top-1: 77.6471, accuracy_top-5: 98.8235
2024-03-03 05:12:14,498 - mmcls - INFO - Epoch [60][100/169]	lr: 1.000e-01, eta: 0:23:21, time: 0.102, data_time: 0.028, memory: 984, loss: 0.7678
2024-03-03 05:12:20,239 - mmcls - INFO - Saving checkpoint at 60 epochs
2024-03-03 05:12:22,676 - mmcls - INFO - Epoch(val) [60][22]	accuracy_top-1: 84.7059, accuracy_top-5: 99.4118
2024-03-03 05:12:32,973 - mmcls - INFO - Epoch [61][100/169]	lr: 1.000e-01, eta: 0:23:12, time: 0.101, data_time: 0.029, memory: 984, loss: 0.8680
2024-03-03 05:12:38,327 - mmcls - INFO - Saving checkpoint at 61 epochs
2024-03-03 05:12:41,268 - mmcls - INFO - Epoch(val) [61][22]	accuracy_top-1: 77.0588, accuracy_top-5: 100.0000
2024-03-03 05:12:51,291 - mmcls - INFO - Epoch [62][100/169]	lr: 1.000e-01, eta: 0:23:02, time: 0.100, data_time: 0.027, memory: 984, loss: 0.8059
2024-03-03 05:12:56,460 - mmcls - INFO - Saving checkpoint at 62 epochs
2024-03-03 05:12:59,044 - mmcls - INFO - Epoch(val) [62][22]	accuracy_top-1: 87.6471, accuracy_top-5: 99.4118
2024-03-03 05:13:09,277 - mmcls - INFO - Epoch [63][100/169]	lr: 1.000e-01, eta: 0:22:52, time: 0.102, data_time: 0.028, memory: 984, loss: 0.8281
2024-03-03 05:13:14,880 - mmcls - INFO - Saving checkpoint at 63 epochs
2024-03-03 05:13:17,586 - mmcls - INFO - Epoch(val) [63][22]	accuracy_top-1: 85.8824, accuracy_top-5: 99.4118
2024-03-03 05:13:27,464 - mmcls - INFO - Epoch [64][100/169]	lr: 1.000e-01, eta: 0:22:42, time: 0.099, data_time: 0.028, memory: 984, loss: 0.8066
2024-03-03 05:13:32,258 - mmcls - INFO - Saving checkpoint at 64 epochs
2024-03-03 05:13:34,747 - mmcls - INFO - Epoch(val) [64][22]	accuracy_top-1: 88.2353, accuracy_top-5: 99.4118
2024-03-03 05:13:45,357 - mmcls - INFO - Epoch [65][100/169]	lr: 1.000e-01, eta: 0:22:33, time: 0.106, data_time: 0.028, memory: 984, loss: 0.8390
2024-03-03 05:13:50,107 - mmcls - INFO - Saving checkpoint at 65 epochs
2024-03-03 05:13:52,825 - mmcls - INFO - Epoch(val) [65][22]	accuracy_top-1: 81.1765, accuracy_top-5: 97.0588
2024-03-03 05:14:01,596 - mmcls - INFO - Epoch [66][100/169]	lr: 1.000e-01, eta: 0:22:21, time: 0.088, data_time: 0.028, memory: 984, loss: 0.8181
2024-03-03 05:14:06,131 - mmcls - INFO - Saving checkpoint at 66 epochs
2024-03-03 05:14:08,928 - mmcls - INFO - Epoch(val) [66][22]	accuracy_top-1: 87.6471, accuracy_top-5: 99.4118
2024-03-03 05:14:18,630 - mmcls - INFO - Epoch [67][100/169]	lr: 1.000e-01, eta: 0:22:10, time: 0.097, data_time: 0.027, memory: 984, loss: 0.8780
2024-03-03 05:14:23,321 - mmcls - INFO - Saving checkpoint at 67 epochs
2024-03-03 05:14:25,619 - mmcls - INFO - Epoch(val) [67][22]	accuracy_top-1: 85.8824, accuracy_top-5: 98.8235
2024-03-03 05:14:35,805 - mmcls - INFO - Epoch [68][100/169]	lr: 1.000e-01, eta: 0:22:00, time: 0.100, data_time: 0.028, memory: 984, loss: 0.7662
2024-03-03 05:14:41,130 - mmcls - INFO - Saving checkpoint at 68 epochs
2024-03-03 05:14:44,016 - mmcls - INFO - Epoch(val) [68][22]	accuracy_top-1: 77.6471, accuracy_top-5: 99.4118
2024-03-03 05:14:54,268 - mmcls - INFO - Epoch [69][100/169]	lr: 1.000e-01, eta: 0:21:51, time: 0.102, data_time: 0.028, memory: 984, loss: 0.7498
2024-03-03 05:14:59,568 - mmcls - INFO - Saving checkpoint at 69 epochs
2024-03-03 05:15:02,334 - mmcls - INFO - Epoch(val) [69][22]	accuracy_top-1: 86.4706, accuracy_top-5: 99.4118
2024-03-03 05:15:12,735 - mmcls - INFO - Epoch [70][100/169]	lr: 1.000e-01, eta: 0:21:41, time: 0.104, data_time: 0.028, memory: 984, loss: 0.7782
2024-03-03 05:15:17,957 - mmcls - INFO - Saving checkpoint at 70 epochs
2024-03-03 05:15:20,493 - mmcls - INFO - Epoch(val) [70][22]	accuracy_top-1: 81.7647, accuracy_top-5: 100.0000
2024-03-03 05:15:30,138 - mmcls - INFO - Epoch [71][100/169]	lr: 1.000e-01, eta: 0:21:31, time: 0.096, data_time: 0.028, memory: 984, loss: 0.8847
2024-03-03 05:15:35,331 - mmcls - INFO - Saving checkpoint at 71 epochs
2024-03-03 05:15:37,970 - mmcls - INFO - Epoch(val) [71][22]	accuracy_top-1: 84.7059, accuracy_top-5: 98.8235
2024-03-03 05:15:47,423 - mmcls - INFO - Epoch [72][100/169]	lr: 1.000e-01, eta: 0:21:20, time: 0.094, data_time: 0.029, memory: 984, loss: 0.8059
2024-03-03 05:15:52,309 - mmcls - INFO - Saving checkpoint at 72 epochs
2024-03-03 05:15:54,681 - mmcls - INFO - Epoch(val) [72][22]	accuracy_top-1: 82.9412, accuracy_top-5: 99.4118
2024-03-03 05:16:04,856 - mmcls - INFO - Epoch [73][100/169]	lr: 1.000e-01, eta: 0:21:10, time: 0.102, data_time: 0.028, memory: 984, loss: 0.7642
2024-03-03 05:16:09,712 - mmcls - INFO - Saving checkpoint at 73 epochs
2024-03-03 05:16:12,752 - mmcls - INFO - Epoch(val) [73][22]	accuracy_top-1: 84.1176, accuracy_top-5: 98.8235
2024-03-03 05:16:23,033 - mmcls - INFO - Epoch [74][100/169]	lr: 1.000e-01, eta: 0:21:01, time: 0.103, data_time: 0.027, memory: 984, loss: 0.7329
2024-03-03 05:16:27,990 - mmcls - INFO - Saving checkpoint at 74 epochs
2024-03-03 05:16:30,838 - mmcls - INFO - Epoch(val) [74][22]	accuracy_top-1: 82.9412, accuracy_top-5: 99.4118
2024-03-03 05:16:41,077 - mmcls - INFO - Epoch [75][100/169]	lr: 1.000e-01, eta: 0:20:51, time: 0.101, data_time: 0.029, memory: 984, loss: 0.7461
2024-03-03 05:16:46,504 - mmcls - INFO - Saving checkpoint at 75 epochs
2024-03-03 05:16:49,280 - mmcls - INFO - Epoch(val) [75][22]	accuracy_top-1: 79.4118, accuracy_top-5: 98.8235
2024-03-03 05:16:59,486 - mmcls - INFO - Epoch [76][100/169]	lr: 1.000e-01, eta: 0:20:41, time: 0.102, data_time: 0.027, memory: 984, loss: 0.7380
2024-03-03 05:17:04,563 - mmcls - INFO - Saving checkpoint at 76 epochs
2024-03-03 05:17:06,868 - mmcls - INFO - Epoch(val) [76][22]	accuracy_top-1: 91.1765, accuracy_top-5: 98.8235
2024-03-03 05:17:16,483 - mmcls - INFO - Epoch [77][100/169]	lr: 1.000e-01, eta: 0:20:31, time: 0.096, data_time: 0.027, memory: 984, loss: 0.7709
2024-03-03 05:17:22,121 - mmcls - INFO - Saving checkpoint at 77 epochs
2024-03-03 05:17:24,739 - mmcls - INFO - Epoch(val) [77][22]	accuracy_top-1: 80.0000, accuracy_top-5: 99.4118
2024-03-03 05:17:34,218 - mmcls - INFO - Epoch [78][100/169]	lr: 1.000e-01, eta: 0:20:20, time: 0.094, data_time: 0.028, memory: 984, loss: 0.8025
2024-03-03 05:17:39,176 - mmcls - INFO - Saving checkpoint at 78 epochs
2024-03-03 05:17:41,713 - mmcls - INFO - Epoch(val) [78][22]	accuracy_top-1: 84.1176, accuracy_top-5: 98.8235
2024-03-03 05:17:51,223 - mmcls - INFO - Epoch [79][100/169]	lr: 1.000e-01, eta: 0:20:09, time: 0.095, data_time: 0.026, memory: 984, loss: 0.7310
2024-03-03 05:17:56,764 - mmcls - INFO - Saving checkpoint at 79 epochs
2024-03-03 05:17:59,570 - mmcls - INFO - Epoch(val) [79][22]	accuracy_top-1: 85.8824, accuracy_top-5: 99.4118
2024-03-03 05:18:10,379 - mmcls - INFO - Epoch [80][100/169]	lr: 1.000e-01, eta: 0:20:00, time: 0.108, data_time: 0.027, memory: 984, loss: 0.6870
2024-03-03 05:18:16,251 - mmcls - INFO - Saving checkpoint at 80 epochs
2024-03-03 05:18:18,779 - mmcls - INFO - Epoch(val) [80][22]	accuracy_top-1: 79.4118, accuracy_top-5: 97.0588
2024-03-03 05:18:28,151 - mmcls - INFO - Epoch [81][100/169]	lr: 1.000e-01, eta: 0:19:50, time: 0.094, data_time: 0.027, memory: 984, loss: 0.9189
2024-03-03 05:18:32,793 - mmcls - INFO - Saving checkpoint at 81 epochs
2024-03-03 05:18:35,722 - mmcls - INFO - Epoch(val) [81][22]	accuracy_top-1: 83.5294, accuracy_top-5: 98.8235
2024-03-03 05:18:45,309 - mmcls - INFO - Epoch [82][100/169]	lr: 1.000e-01, eta: 0:19:39, time: 0.096, data_time: 0.028, memory: 984, loss: 0.7595
2024-03-03 05:18:50,209 - mmcls - INFO - Saving checkpoint at 82 epochs
2024-03-03 05:18:52,647 - mmcls - INFO - Epoch(val) [82][22]	accuracy_top-1: 89.4118, accuracy_top-5: 98.2353
2024-03-03 05:19:02,061 - mmcls - INFO - Epoch [83][100/169]	lr: 1.000e-01, eta: 0:19:28, time: 0.093, data_time: 0.027, memory: 984, loss: 0.6845
2024-03-03 05:19:06,730 - mmcls - INFO - Saving checkpoint at 83 epochs
2024-03-03 05:19:09,294 - mmcls - INFO - Epoch(val) [83][22]	accuracy_top-1: 85.2941, accuracy_top-5: 99.4118
2024-03-03 05:19:18,768 - mmcls - INFO - Epoch [84][100/169]	lr: 1.000e-01, eta: 0:19:17, time: 0.095, data_time: 0.028, memory: 984, loss: 0.7532
2024-03-03 05:19:23,522 - mmcls - INFO - Saving checkpoint at 84 epochs
2024-03-03 05:19:26,008 - mmcls - INFO - Epoch(val) [84][22]	accuracy_top-1: 87.0588, accuracy_top-5: 100.0000
2024-03-03 05:19:35,235 - mmcls - INFO - Epoch [85][100/169]	lr: 1.000e-01, eta: 0:19:06, time: 0.092, data_time: 0.027, memory: 984, loss: 0.7810
2024-03-03 05:19:40,156 - mmcls - INFO - Saving checkpoint at 85 epochs
2024-03-03 05:19:42,891 - mmcls - INFO - Epoch(val) [85][22]	accuracy_top-1: 85.2941, accuracy_top-5: 100.0000
2024-03-03 05:19:52,510 - mmcls - INFO - Epoch [86][100/169]	lr: 1.000e-01, eta: 0:18:56, time: 0.096, data_time: 0.028, memory: 984, loss: 0.7128
2024-03-03 05:19:57,609 - mmcls - INFO - Saving checkpoint at 86 epochs
2024-03-03 05:20:00,181 - mmcls - INFO - Epoch(val) [86][22]	accuracy_top-1: 86.4706, accuracy_top-5: 99.4118
2024-03-03 05:20:10,112 - mmcls - INFO - Epoch [87][100/169]	lr: 1.000e-01, eta: 0:18:46, time: 0.099, data_time: 0.028, memory: 984, loss: 0.6615
2024-03-03 05:20:15,172 - mmcls - INFO - Saving checkpoint at 87 epochs
2024-03-03 05:20:18,036 - mmcls - INFO - Epoch(val) [87][22]	accuracy_top-1: 88.8235, accuracy_top-5: 98.8235
2024-03-03 05:20:27,501 - mmcls - INFO - Epoch [88][100/169]	lr: 1.000e-01, eta: 0:18:36, time: 0.095, data_time: 0.027, memory: 984, loss: 0.6506
2024-03-03 05:20:32,382 - mmcls - INFO - Saving checkpoint at 88 epochs
2024-03-03 05:20:35,187 - mmcls - INFO - Epoch(val) [88][22]	accuracy_top-1: 84.7059, accuracy_top-5: 98.8235
2024-03-03 05:20:44,598 - mmcls - INFO - Epoch [89][100/169]	lr: 1.000e-01, eta: 0:18:25, time: 0.094, data_time: 0.027, memory: 984, loss: 0.7068
2024-03-03 05:20:49,447 - mmcls - INFO - Saving checkpoint at 89 epochs
2024-03-03 05:20:52,271 - mmcls - INFO - Epoch(val) [89][22]	accuracy_top-1: 82.9412, accuracy_top-5: 98.8235
2024-03-03 05:21:01,491 - mmcls - INFO - Epoch [90][100/169]	lr: 1.000e-01, eta: 0:18:14, time: 0.092, data_time: 0.027, memory: 984, loss: 0.7263
2024-03-03 05:21:06,267 - mmcls - INFO - Saving checkpoint at 90 epochs
2024-03-03 05:21:08,948 - mmcls - INFO - Epoch(val) [90][22]	accuracy_top-1: 88.2353, accuracy_top-5: 99.4118
2024-03-03 05:21:18,604 - mmcls - INFO - Epoch [91][100/169]	lr: 1.000e-01, eta: 0:18:04, time: 0.096, data_time: 0.028, memory: 984, loss: 0.6680
2024-03-03 05:21:23,567 - mmcls - INFO - Saving checkpoint at 91 epochs
2024-03-03 05:21:26,079 - mmcls - INFO - Epoch(val) [91][22]	accuracy_top-1: 88.2353, accuracy_top-5: 99.4118
2024-03-03 05:21:36,604 - mmcls - INFO - Epoch [92][100/169]	lr: 1.000e-01, eta: 0:17:54, time: 0.101, data_time: 0.028, memory: 984, loss: 0.6407
2024-03-03 05:21:42,063 - mmcls - INFO - Saving checkpoint at 92 epochs
2024-03-03 05:21:45,599 - mmcls - INFO - Epoch(val) [92][22]	accuracy_top-1: 82.9412, accuracy_top-5: 100.0000
2024-03-03 05:21:55,169 - mmcls - INFO - Epoch [93][100/169]	lr: 1.000e-01, eta: 0:17:44, time: 0.096, data_time: 0.028, memory: 984, loss: 0.7557
2024-03-03 05:22:00,494 - mmcls - INFO - Saving checkpoint at 93 epochs
2024-03-03 05:22:04,643 - mmcls - INFO - Epoch(val) [93][22]	accuracy_top-1: 91.1765, accuracy_top-5: 99.4118
2024-03-03 05:22:13,901 - mmcls - INFO - Epoch [94][100/169]	lr: 1.000e-01, eta: 0:17:33, time: 0.092, data_time: 0.027, memory: 984, loss: 0.6610
2024-03-03 05:22:19,475 - mmcls - INFO - Saving checkpoint at 94 epochs
2024-03-03 05:22:22,780 - mmcls - INFO - Epoch(val) [94][22]	accuracy_top-1: 86.4706, accuracy_top-5: 99.4118
2024-03-03 05:22:32,404 - mmcls - INFO - Epoch [95][100/169]	lr: 1.000e-01, eta: 0:17:23, time: 0.096, data_time: 0.027, memory: 984, loss: 0.7685
2024-03-03 05:22:38,047 - mmcls - INFO - Saving checkpoint at 95 epochs
2024-03-03 05:22:40,763 - mmcls - INFO - Epoch(val) [95][22]	accuracy_top-1: 81.7647, accuracy_top-5: 98.2353
2024-03-03 05:22:50,122 - mmcls - INFO - Epoch [96][100/169]	lr: 1.000e-01, eta: 0:17:13, time: 0.093, data_time: 0.027, memory: 984, loss: 0.7652
2024-03-03 05:22:54,858 - mmcls - INFO - Saving checkpoint at 96 epochs
2024-03-03 05:22:57,830 - mmcls - INFO - Epoch(val) [96][22]	accuracy_top-1: 86.4706, accuracy_top-5: 99.4118
2024-03-03 05:23:06,709 - mmcls - INFO - Epoch [97][100/169]	lr: 1.000e-01, eta: 0:17:02, time: 0.089, data_time: 0.026, memory: 984, loss: 0.7163
2024-03-03 05:23:11,270 - mmcls - INFO - Saving checkpoint at 97 epochs
2024-03-03 05:23:14,117 - mmcls - INFO - Epoch(val) [97][22]	accuracy_top-1: 85.8824, accuracy_top-5: 100.0000
2024-03-03 05:23:23,964 - mmcls - INFO - Epoch [98][100/169]	lr: 1.000e-01, eta: 0:16:52, time: 0.098, data_time: 0.028, memory: 984, loss: 0.6940
2024-03-03 05:23:28,651 - mmcls - INFO - Saving checkpoint at 98 epochs
2024-03-03 05:23:31,363 - mmcls - INFO - Epoch(val) [98][22]	accuracy_top-1: 88.2353, accuracy_top-5: 100.0000
2024-03-03 05:23:41,282 - mmcls - INFO - Epoch [99][100/169]	lr: 1.000e-01, eta: 0:16:42, time: 0.099, data_time: 0.028, memory: 984, loss: 0.7082
2024-03-03 05:23:47,363 - mmcls - INFO - Saving checkpoint at 99 epochs
2024-03-03 05:23:50,241 - mmcls - INFO - Epoch(val) [99][22]	accuracy_top-1: 82.9412, accuracy_top-5: 98.8235
2024-03-03 05:24:02,056 - mmcls - INFO - Epoch [100][100/169]	lr: 1.000e-01, eta: 0:16:34, time: 0.118, data_time: 0.028, memory: 984, loss: 0.7028
2024-03-03 05:24:08,031 - mmcls - INFO - Saving checkpoint at 100 epochs
2024-03-03 05:24:10,909 - mmcls - INFO - Epoch(val) [100][22]	accuracy_top-1: 85.2941, accuracy_top-5: 98.8235
2024-03-03 05:24:20,459 - mmcls - INFO - Epoch [101][100/169]	lr: 1.000e-02, eta: 0:16:23, time: 0.095, data_time: 0.027, memory: 984, loss: 0.5707
2024-03-03 05:24:25,764 - mmcls - INFO - Saving checkpoint at 101 epochs
2024-03-03 05:24:28,804 - mmcls - INFO - Epoch(val) [101][22]	accuracy_top-1: 94.1176, accuracy_top-5: 99.4118
2024-03-03 05:24:38,411 - mmcls - INFO - Epoch [102][100/169]	lr: 1.000e-02, eta: 0:16:13, time: 0.096, data_time: 0.027, memory: 984, loss: 0.4611
2024-03-03 05:24:43,229 - mmcls - INFO - Saving checkpoint at 102 epochs
2024-03-03 05:24:45,941 - mmcls - INFO - Epoch(val) [102][22]	accuracy_top-1: 94.7059, accuracy_top-5: 100.0000
2024-03-03 05:24:56,265 - mmcls - INFO - Epoch [103][100/169]	lr: 1.000e-02, eta: 0:16:04, time: 0.103, data_time: 0.028, memory: 984, loss: 0.3691
2024-03-03 05:25:01,672 - mmcls - INFO - Saving checkpoint at 103 epochs
2024-03-03 05:25:04,608 - mmcls - INFO - Epoch(val) [103][22]	accuracy_top-1: 94.1176, accuracy_top-5: 100.0000
2024-03-03 05:25:13,930 - mmcls - INFO - Epoch [104][100/169]	lr: 1.000e-02, eta: 0:15:53, time: 0.093, data_time: 0.027, memory: 984, loss: 0.3942
2024-03-03 05:25:19,607 - mmcls - INFO - Saving checkpoint at 104 epochs
2024-03-03 05:25:22,631 - mmcls - INFO - Epoch(val) [104][22]	accuracy_top-1: 95.2941, accuracy_top-5: 100.0000
2024-03-03 05:25:32,738 - mmcls - INFO - Epoch [105][100/169]	lr: 1.000e-02, eta: 0:15:44, time: 0.101, data_time: 0.027, memory: 984, loss: 0.3939
2024-03-03 05:25:38,343 - mmcls - INFO - Saving checkpoint at 105 epochs
2024-03-03 05:25:41,098 - mmcls - INFO - Epoch(val) [105][22]	accuracy_top-1: 96.4706, accuracy_top-5: 100.0000
2024-03-03 05:25:51,154 - mmcls - INFO - Epoch [106][100/169]	lr: 1.000e-02, eta: 0:15:34, time: 0.100, data_time: 0.028, memory: 984, loss: 0.3517
2024-03-03 05:25:57,246 - mmcls - INFO - Saving checkpoint at 106 epochs
2024-03-03 05:26:00,244 - mmcls - INFO - Epoch(val) [106][22]	accuracy_top-1: 95.8824, accuracy_top-5: 100.0000
2024-03-03 05:26:10,567 - mmcls - INFO - Epoch [107][100/169]	lr: 1.000e-02, eta: 0:15:24, time: 0.103, data_time: 0.029, memory: 984, loss: 0.3443
2024-03-03 05:26:16,372 - mmcls - INFO - Saving checkpoint at 107 epochs
2024-03-03 05:26:19,241 - mmcls - INFO - Epoch(val) [107][22]	accuracy_top-1: 95.8824, accuracy_top-5: 99.4118
2024-03-03 05:26:28,323 - mmcls - INFO - Epoch [108][100/169]	lr: 1.000e-02, eta: 0:15:14, time: 0.091, data_time: 0.027, memory: 984, loss: 0.3882
2024-03-03 05:26:33,324 - mmcls - INFO - Saving checkpoint at 108 epochs
2024-03-03 05:26:35,949 - mmcls - INFO - Epoch(val) [108][22]	accuracy_top-1: 95.2941, accuracy_top-5: 99.4118
2024-03-03 05:26:45,731 - mmcls - INFO - Epoch [109][100/169]	lr: 1.000e-02, eta: 0:15:04, time: 0.098, data_time: 0.028, memory: 984, loss: 0.3706
2024-03-03 05:26:50,672 - mmcls - INFO - Saving checkpoint at 109 epochs
2024-03-03 05:26:54,076 - mmcls - INFO - Epoch(val) [109][22]	accuracy_top-1: 97.0588, accuracy_top-5: 100.0000
2024-03-03 05:27:04,113 - mmcls - INFO - Epoch [110][100/169]	lr: 1.000e-02, eta: 0:14:54, time: 0.100, data_time: 0.028, memory: 984, loss: 0.4060
2024-03-03 05:27:09,853 - mmcls - INFO - Saving checkpoint at 110 epochs
2024-03-03 05:27:12,865 - mmcls - INFO - Epoch(val) [110][22]	accuracy_top-1: 95.8824, accuracy_top-5: 99.4118
2024-03-03 05:27:22,746 - mmcls - INFO - Epoch [111][100/169]	lr: 1.000e-02, eta: 0:14:44, time: 0.099, data_time: 0.028, memory: 984, loss: 0.3492
2024-03-03 05:27:28,376 - mmcls - INFO - Saving checkpoint at 111 epochs
2024-03-03 05:27:31,356 - mmcls - INFO - Epoch(val) [111][22]	accuracy_top-1: 95.2941, accuracy_top-5: 100.0000
2024-03-03 05:27:41,380 - mmcls - INFO - Epoch [112][100/169]	lr: 1.000e-02, eta: 0:14:34, time: 0.100, data_time: 0.028, memory: 984, loss: 0.4003
2024-03-03 05:27:46,406 - mmcls - INFO - Saving checkpoint at 112 epochs
2024-03-03 05:27:49,189 - mmcls - INFO - Epoch(val) [112][22]	accuracy_top-1: 96.4706, accuracy_top-5: 100.0000
2024-03-03 05:27:58,971 - mmcls - INFO - Epoch [113][100/169]	lr: 1.000e-02, eta: 0:14:24, time: 0.098, data_time: 0.027, memory: 984, loss: 0.3543
2024-03-03 05:28:03,830 - mmcls - INFO - Saving checkpoint at 113 epochs
2024-03-03 05:28:06,587 - mmcls - INFO - Epoch(val) [113][22]	accuracy_top-1: 97.6471, accuracy_top-5: 99.4118
2024-03-03 05:28:16,421 - mmcls - INFO - Epoch [114][100/169]	lr: 1.000e-02, eta: 0:14:14, time: 0.098, data_time: 0.028, memory: 984, loss: 0.3566
2024-03-03 05:28:21,716 - mmcls - INFO - Saving checkpoint at 114 epochs
2024-03-03 05:28:24,488 - mmcls - INFO - Epoch(val) [114][22]	accuracy_top-1: 98.2353, accuracy_top-5: 99.4118
2024-03-03 05:28:34,182 - mmcls - INFO - Epoch [115][100/169]	lr: 1.000e-02, eta: 0:14:04, time: 0.097, data_time: 0.028, memory: 984, loss: 0.3036
2024-03-03 05:28:38,744 - mmcls - INFO - Saving checkpoint at 115 epochs
2024-03-03 05:28:42,006 - mmcls - INFO - Epoch(val) [115][22]	accuracy_top-1: 95.2941, accuracy_top-5: 99.4118
2024-03-03 05:28:52,344 - mmcls - INFO - Epoch [116][100/169]	lr: 1.000e-02, eta: 0:13:55, time: 0.103, data_time: 0.028, memory: 984, loss: 0.3262
